@using KnownUniversePoliticsGameWebApp.Data
<h3>Transfer Assets Between Players</h3>
@inject KUPEventService _eventService;
@inject KnownUniversePoliticsGameService _politicsGameService

@code {

    enum AssetTypes
    {
        All_Assets,
        All_Combat_Assets,
        All_Location_Assets,
        Unclaimed_Location_Assets,
    }

    AssetTypes AssetType = AssetTypes.All_Assets;
    
    int AssetID = -1;
    int FactionID = -1;
    KUPFaction TargetFaction = null;

    List<IKUPAsset> AssetsToTransfer = new List<IKUPAsset>();

    private List<IKUPAsset> AssetsToSee()
    {
        var retList = new List<IKUPAsset>();

        if (AssetType == AssetTypes.All_Assets)
        {
            retList = _politicsGameService.PoliticsGame.AssetsInPlay;
        }
        
        if (AssetType == AssetTypes.All_Location_Assets)
        {
            retList = _politicsGameService.PoliticsGame.AssetsInPlay
                .Where(x => x.GetType() != typeof(KUPCombatAsset)
                            || x.GetType() != typeof(KupPointsOfInterestWreck)).ToList();
        }
        
        if (AssetType == AssetTypes.Unclaimed_Location_Assets)
        {
            retList = _politicsGameService.PoliticsGame.AssetsInPlay
                .Where(x => x.GetType() != typeof(KUPCombatAsset)
                            || x.GetType() != typeof(KupPointsOfInterestWreck))
                .Where(x => x.Controller.FactionType == FactionType.Unclaimed).ToList();
        }
        
        if (AssetType == AssetTypes.All_Combat_Assets)
        {
            retList = _politicsGameService.PoliticsGame.AssetsInPlay
                .Where(x => x.GetType() == typeof(KUPCombatAsset)).ToList();
        }

        return retList;
    }

    private void AddToTransferList()
    {
        if (AssetID != 0 || AssetID != -1)
        {
            AssetsToTransfer.Add(_politicsGameService.GetAsset(AssetID));
        }
    }

    private void ResetTransferList()
    {
        AssetsToTransfer = new List<IKUPAsset>();
    }

    private void ResetTargetFaction()
    {
        FactionID = -1;
        TargetFaction = null;
    }

    private void SetTargetFaction()
    {
        TargetFaction = _politicsGameService.GetFaction(FactionID);
    }

    private void TransferAssets()
    {
        _politicsGameService.AdminTransferAssets(TargetFaction, AssetsToTransfer);
    }

}

<div>
    <h5>Items to be Transfered</h5>
    <ul>
        @foreach (var asset in AssetsToTransfer)
        {
            <li>
                <p>@asset</p>
                <button type="button" @onclick="() => AssetsToTransfer.Remove(asset)">Remove Asset from transfer list.</button>
            </li>
            
        }
    </ul>
</div>

<div>
    <label for="AssetType">Select the Types of Assets:</label>
    <select id="AssetType" @bind="AssetType">
        <option value="@(AssetTypes.All_Assets)">All Assets</option>
        <option value="@(AssetTypes.All_Combat_Assets)">Combat Assets</option>
        <option value="@(AssetTypes.All_Location_Assets)">All Location Assets</option>
        <option value="@(AssetTypes.Unclaimed_Location_Assets)">Unclaimed Location Assets</option>
    </select>
    
</div>

<div>
    <label for="selectAsset">Select Asset to Transfer: </label>
    <select id="selectAsset" @bind="AssetID">
        @foreach (var asset in AssetsToSee())
        {
            <option value="@asset.assetID">@asset</option>
        }
    </select>
    <button type="button" @onclick="AddToTransferList">Add to transfer list</button>
    <button type="button" @onclick="ResetTransferList">Reset transfer list</button>
</div>

@if (TargetFaction == null)
{
    <div>
        <label for="selectFaction">Select Faction to Transfer to: </label>
        <select id="selectFaction" @bind="FactionID">
            @foreach (var faction in _politicsGameService.PoliticsGame.Factions)
            {
                <option value="@faction.FactionID">@faction.Name</option>
            }
        </select>
        <button type="button" @onclick="SetTargetFaction">Set As Target Faction</button>
    </div>
}
else
{
    <div>
        <p>Target Faction is: @TargetFaction.Name</p>
        <button type="button" @onclick="ResetTargetFaction">Reset Target of Transfer</button>
    </div>
}

<div>
    @if (TargetFaction != null && AssetsToTransfer.Count > 0)
    {
        <button type="button" @onclick="TransferAssets">Transfer Assets</button>
    }
</div>