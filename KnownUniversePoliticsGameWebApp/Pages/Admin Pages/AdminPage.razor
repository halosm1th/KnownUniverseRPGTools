@page "/PaginaDelAdministrator"
@using KnownUniversePoliticsGameWebApp.Data
@inject KnownUniversePoliticsGameService _politicsGameService
@inject KUPEventService _eventService;
<style>
    #AssetsToLookAt {height:200px; width:50%;
    overflow:hidden; overflow-y:scroll; overflow-x: scroll
    }
</style>
<PageTitle>Admin Page</PageTitle>
<h3>Admin Console</h3>

@code {

    private async Task SetupGame()
    {
        if (!_politicsGameService.HasBeenInited)
        {
           await _politicsGameService.Init();
            await _eventService.Init();
        }
    }

    private void RefreshMap()
    {
        _politicsGameService.MapRefresh();
    }

    private void EndOfTurn()
    {
        _politicsGameService.EndOfTurn();
    }

    enum AdminActions
    {
        EventView,
        FactionList,
        AssetList,
        TransferFactionAsset,
        CreateShip,
        AssignPlayerToFaction,
        CreateNewFaction,
    }

    AdminActions AdminAction = AdminActions.EventView;

}
<div>
    @if (!_politicsGameService.HasBeenInited)
    {
        <button @onclick="SetupGame" type="button">Click me to Init the Game!</button>
    }
    else
    {
        <button @onclick="RefreshMap" type="button">Click me to refresh the map!</button>
    }
</div>
@if (_politicsGameService.HasBeenInited)
{
    <button @onclick="EndOfTurn">End of Turn!</button>
 
    
    <select @bind="AdminAction">
        <option value="@AdminActions.EventView">Event View</option>
        <option value="@AdminActions.FactionList">Faction List</option>
        <option value="@AdminActions.AssetList">Asset List</option>
        <option value="@AdminActions.TransferFactionAsset">Transfer Faction Asset</option>
        <option value="@AdminActions.CreateShip">Create Ship</option>
        <option value="@AdminActions.AssignPlayerToFaction">Assign Player To Faction</option>
        <option value="@AdminActions.CreateNewFaction">Create New Faction</option>
    </select>

    @if(AdminAction == AdminActions.EventView){ <AdminEventsView></AdminEventsView>}
    else if(AdminAction == AdminActions.FactionList){ <AdminFactionList></AdminFactionList>}
    else if(AdminAction == AdminActions.AssetList){ <AdminAssetList></AdminAssetList>}
    
    else if(AdminAction == AdminActions.TransferFactionAsset){ <AdminTransferFactionAsset></AdminTransferFactionAsset>}
    else if(AdminAction == AdminActions.CreateShip){ <AdminGiveFactionShip></AdminGiveFactionShip>}
    else if(AdminAction == AdminActions.AssignPlayerToFaction){ <AdminAssignPlayerToFaction></AdminAssignPlayerToFaction>}
    else if(AdminAction == AdminActions.CreateNewFaction){ <AdminCreateFaction></AdminCreateFaction>}
}