@using KnownUniversePoliticsGameWebApp.Data
@using KnownUniversePoliticsGameWebApp.Pages.Store_Pages
@inject KnownUniversePoliticsGameService _politicsGameService
@inject KUPEventService _eventService;
<h3>AdminGiveFactionShip</h3>

@code {
    int ChosenPlayerID;
    int LocationID;
    CombatAssetSize Size;
    void CreateShip()
    {
        var factionID = _politicsGameService.GetPlayer(ChosenPlayerID).Faction.ReceiverID;

        var cost = KUPCombatAsset.GetCosts(Size);

        _eventService.AddEvent(
            new KUPMoneyDepositEvent(_politicsGameService.PoliticsGame.SenderID,
                factionID,cost));
        _eventService.AddEvent(
            new KUPBuildShipEvent(factionID, Size,LocationID));
    }
}

<form>
    <label>Select Player:</label>
    <select @bind="ChosenPlayerID">
        @foreach (var player in _politicsGameService.PoliticsGame.Players)
        {
            <option value="@player.SenderID">@player.Name</option>
        }
    </select>
    
    <label>Size</label>
    <select @bind="Size">
        <option value="@CombatAssetSize.Small">Small</option>
        <option value="@CombatAssetSize.Medium">Medium</option>
        <option value="@CombatAssetSize.Large">Large</option>
        <option value="@CombatAssetSize.Station">Station</option>
    </select>
    
    <label>Location</label>
    <select @bind="LocationID">
        @foreach (var location in _politicsGameService
            .GetBuildLocations(
            _politicsGameService?.GetPlayer(ChosenPlayerID)?.Faction))
        {
            <option value="@location.assetID">@location.Name</option>
        }
    </select>

    <button @onclick="CreateShip" type="button">Give Ship</button>
</form>