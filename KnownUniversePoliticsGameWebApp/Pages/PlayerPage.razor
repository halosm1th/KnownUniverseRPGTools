@page "/PlayerPage"
@using KnownUniversePoliticsGameWebApp.Data
@inject KnownUniversePoliticsGameService PoliticsGameService
@inject KUPEventService EventService;
@inject IJSRuntime JsRuntime;
<h3>Your Page</h3>
<p>The cookie is @myCookieValue</p>
@code {

}
@code {
    bool LoggedIn => ReadCookies("LoggedIn").Result == "True";
    bool logginError = false;
    string Password = "";
    string Username = "";
    int TransferAmount;
    KUPPlayer? player;

    string targetFactionName = "Game Master";
    string message;

    public string myCookieValue { get; set; } = "";
    protected async Task WriteCookies(string name, string value)
    {

        await JsRuntime.InvokeAsync<object>("WriteCookie.WriteCookie", name, value);

    }
    protected async Task<string> ReadCookies(string name)
    {

        myCookieValue= await JsRuntime.InvokeAsync<string>("ReadCookie.ReadCookie", name);

        return myCookieValue;
    }
    private void Login()
    {
        if (!PoliticsGameService.Login(Username, Password))
        {
            logginError = true;
        }
        else
        {
            player = PoliticsGameService.GetPlayer(Username);
            WriteCookies("LoggedIn","True");
            WriteCookies("LoggedInAs", player.Name);
        }
    }

    private void FactionTransferMoney()
    {
        EventService.AddEvent(new IKUPMoneyTransferEvent(player.Faction.FactionID,player.ReciverID,TransferAmount));
    }

    private void PlayerTransferMoney()
    {
        EventService.AddEvent(new IKUPMoneyTransferEvent(player.ReciverID,player.Faction.FactionID,TransferAmount));

    }

    private void SendMessage()
    {
        var factionID = PoliticsGameService.PoliticsGame.Factions.First(x => x.Name == targetFactionName).ReciverID;
        
        EventService.AddEvent(new IKUPMessageEvent(player.Faction.SenderID,factionID,message));
        targetFactionName = "";
        message = "";
    }

    private void ResetTransfer()
    {
        TransferAmount = 0;
    }

}

@if (!LoggedIn)
{
    if (logginError)
    {
        <p style="text-color: red">Error you put something in wrong when logging in.</p>
    }
    <label for="playerName">Name: </label>
    <input type="text" id="playerName" @bind="Username"/>
    
    <label for="playerPassword">password: </label>
    <input type="text" id="playerPassword" @bind="Password"/>
    <button @onclick="Login">Try Logging in</button>
}
else
{
    <h3>@ReadCookies("LoggedInAs").Result</h3>
    <form>
        <p>Your Personal Funds: @player.PersonalFunds</p>
        <p>Your Factions Funds: @player.Faction.Money</p>
        <div>
            <p>Transfer Money from Faction To Personal</p>
            <label for="AmountToTransfer">Amount to Transfer:</label>
            <input type="text" @bind="TransferAmount"/>
            @if (TransferAmount <= player.Faction.Money)
            {
                <button @onclick="FactionTransferMoney">Transfer From Faction</button>
            }
            @if (TransferAmount <= player.PersonalFunds)
            {
                <button @onclick="PlayerTransferMoney">Transfer From Player</button>
            }
            <button @onclick="ResetTransfer">Reset Trasnfer Amount</button>
        </div>
    </form>
    <form>
        <h5>Send Message To Faction</h5>
        <label for="targetFaction">Target Faction</label>
        <select list="targetFactions" id="targetFaction" name="targetFaction" @bind="targetFactionName">
            @foreach (var faction in PoliticsGameService.PoliticsGame.Factions)
            {
                <option value="@faction.Name">
                    @faction.Name
                </option>
            }
        </select>
                <label for="message">Message: </label>
        <input type="text" id="message" name="message" @bind="message"/>
        <button type="button" @onclick="SendMessage">Send Message</button>
    </form>
    <FactionView Faction="player?.Faction"></FactionView>
}