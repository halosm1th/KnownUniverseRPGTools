@using KnownUniversePoliticsGameWebApp.Data
@using Microsoft.AspNetCore.Components

@inject KnownUniversePoliticsGameService PoliticsGameService
@inject KUPEventService EventService;
<h3>PlayerSendMessage</h3>

@code {
    
    string targetFactionName = "Game Master";
    string message;
    [Parameter] public KUPPlayer player { get; set; }


    private void SendMessage()
    {
        try
        {
            var factionID = PoliticsGameService.PoliticsGame.Factions.First(x => x.Name == targetFactionName).ReceiverID;

            EventService.AddEvent(new IKUPMessageEvent(player.Faction.SenderID, factionID, message));
            targetFactionName = "";
            message = "";
        }
        catch (Exception e)
        {

        }
    }

}


<form class="form-control">
    <h5>Send Message To Faction</h5>
    
    <div class="mb-3">
    <label class="form-label" for="targetFaction">Target Faction</label>
    <select class="form-select" list="targetFactions" id="targetFaction" name="targetFaction" @bind="targetFactionName">
        @foreach (var faction in PoliticsGameService.PoliticsGame.Factions)
        {
            <option value="@faction.Name">
                @faction.Name
            </option>
        }
    </select>
    </div>
    
    <div class="mb-2">
    <label class="form-label" for="message">Message: </label>
    <textarea class="form-control" rows="3" type="text" id="message" name="message" @bind="message"></textarea>
    </div>
    <button  class="btn btn-primary"  type="button" @onclick="SendMessage">Send Message</button>
</form>

<br/>
<div class="">
    <h5>Previous Messages</h5>
    <ul class="list-inline">
        @foreach (var previousMessage in EventService.GetEvents(player.Faction.ReceiverID))
        {
            <li class="list-inline-item">
                @previousMessage
            </li>
        }
    </ul>
</div>