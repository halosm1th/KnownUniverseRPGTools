@using KnownUniversePoliticsGameWebApp.Data
@inject KUPEventService EventService;
<h3>@(Faction?.Name ?? "None")- @(Faction.Player?.Name ?? "None")</h3>

@code {
   [Parameter]
   public KUPFaction Faction { get; set; }

   private string locationPath(KUPLocation location)
   {
      return $"{location.SystemX}/{location.SystemY}";
   }

}

<p>Money: $@Faction.Money</p>

<details>
   <summary>Faction Info &amp; Goals</summary>
   <div>
      <h5>Summary</h5>
      <p>Income: @Faction.Assets.Aggregate(0,(h,t) => h + t.MoneyIncome)</p>
      <p>Exepensies: @Faction.Assets.Aggregate(0, (h,t) => h + t.UpKeepCost)</p>
      <p>Net: @(Faction.Assets.Aggregate(0,(h,t) => h + t.MoneyIncome) - Faction.Assets.Aggregate(0, (h,t) => h + t.UpKeepCost)) </p>
      <ul>
         @foreach (var point in Faction.Summary)
         {
            <li>@point</li>
         }
      </ul>
   </div>
   <div>
      <h5>Goals</h5>
      <ol>
         @foreach (var goal in Faction.Goals)
         {
            <li>@goal</li>
         }
      </ol>
   </div>
</details>
<details>
   <summary>Events & Notifications</summary>
   <ul>
      @foreach (var evnt in EventService.GetEvents(Faction.ReceiverID))
      {
         <li> @evnt</li>
      }
      
   </ul>
</details>
<details>
   <summary>Military Assets</summary>
   <ul>
      
      @foreach (var asset in Faction.Assets.Where(x => x.GetType() == typeof(KUPCombatAsset)))
      {
         <option>
            <li>@asset</li>
         </option>
      }
   </ul>
</details>
<details>
   <summary>Location Assets</summary>
   <ul>
      @foreach (var locations in Faction.GetFilledSystems())
      {
         <option>
            <li>
               <a href="/SystemViewer/@locationPath(locations.Location)"> @locations.Name (@locations.Location) $@locations.MoneyIncome 😊@locations.MoralIncome</a>
            </li>
         </option>
      }
   </ul>
</details>