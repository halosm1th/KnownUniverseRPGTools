@using KnownUniversePoliticsGameWebApp.Data
@using System.Diagnostics.Eventing.Reader
@inject KnownUniversePoliticsGameService PoliticsGameService
@inject KUPEventService EventService;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager
<h3>Trade Assets</h3>

@code {
    
    [Parameter] public KUPPlayer? player { get; set; }
    int targetFactionID = -1;
    bool AssetTransfered = false;
    List<int> AssetsToTrade = new List<int>();
    int AssetToTrade = -1;
    int FactionToGiveTo = -1;

    

    private void TransferAsset()
    {
        if (PoliticsGameService.CanTrasnferAsset(player.Faction.FactionID, AssetsToTrade))
        {

            EventService.AddEvent(
                new KUPAssetTransferEvent(player.Faction.SenderID, targetFactionID, AssetsToTrade));
            AssetTransfered = true;
            AssetsToTrade = new List<int>();
            ResetFaction();
            int AssetToTrade = -1;
            NavigationManager.NavigateTo("didTrade");
        }
        else
        {
            AssetTransfered = false;            AssetsToTrade = new List<int>();
            ResetFaction();
            int AssetToTrade = -1;
            NavigationManager.NavigateTo("failedToTrade");
        }
    }

    private void AddAsset()
    {
        if (player.Faction.Assets.Any(x => x.assetID == AssetToTrade))
        {
            AssetsToTrade.Add(AssetToTrade);
            AssetToTrade = -1;
        }
    }
    

    private void SetFaction()
    {
        targetFactionID = FactionToGiveTo;
    }

    private void ResetFaction()
    {
        targetFactionID = -1;
        FactionToGiveTo = -1;
    }

}

<form>
    <div class="hstack gap-2 p-2" style="max-width: 700px">
        <label class="text-nowrap" for="target" style="width: 200px">Transfer Asset To</label>
        @if (targetFactionID == -1)
        {
            <select class="form-select mx-auto" @bind="FactionToGiveTo" id="target" style="max-width: 400px">
                @foreach (var faction in PoliticsGameService.PoliticsGame.Factions)
                {
                    <option value="@faction.ReceiverID">
                        @faction.Name
                    </option>
                }
            </select>
            <button class="btn btn-outline-dark text-nowrap" type="button" @onclick="SetFaction" style="max-width: 250px">Click me to Set Target Faction</button>
            <br/>
        }
        else
        {
            <h5>Target Faction: @PoliticsGameService.GetFaction(targetFactionID) </h5>
            <button class="btn btn-outline-dark text-nowrap" type="button" @onclick="ResetFaction">Reset Target Faction</button>
            <br/>
        }
    </div>
    <div class="hstack gap-2 p-2" style="max-width: 700px">
        <label class="text-nowrap" for="asset" style="width: 200px">Asset to Transfer</label>
        <select class="form-select mx-auto" id="asset" @bind="AssetToTrade" style="max-width: 400px">
            @foreach (var asset in player.Faction.Assets)
            {
                <option value="@asset.assetID">
                    @asset.Name @asset.Location
                </option>
            }
        </select>
        <button class="btn btn-outline-dark text-nowrap" @onclick="AddAsset" type="button">Add Asset to Transfer List</button>
        <br/>
    </div>

    <label for="assetsToTrade">Assets to Trade</label>
    <ul id="assetsToTrade">
        @foreach (var asset in AssetsToTrade)
        {
            <li>@PoliticsGameService.GetAsset(asset)</li>
        }
    </ul>
    @if (targetFactionID != -1 && AssetsToTrade.Count > 0)
    {
        <button class="btn btn-outline-dark" type="button" @onclick="TransferAsset">Transfer Asset</button>
    }
</form>