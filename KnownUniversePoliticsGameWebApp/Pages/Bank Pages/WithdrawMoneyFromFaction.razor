@using KnownUniversePoliticsGameWebApp.Data
@inject KnownUniversePoliticsGameService PoliticsGameService
@inject KUPEventService EventService;
@inject NavigationManager NavigationManager
@code {
    [Parameter] public KUPPlayer player { get; set; }
    int withdrawAmount = 0;
    
    private void PlayerWithdrawFRomBank()
    {
        if (player.Faction.Money >= withdrawAmount)
        {
    //Refer to PoliticsGame.cs for info on why this is the bank ID
            var bankID = PoliticsGameService.GetFaction("Bank").ReceiverID;
            EventService.AddEvent(
                new KUPMoneyWithdrawEvent(player.Faction.SenderID, bankID, withdrawAmount));
            NavigationManager.NavigateTo($"TransferComplete/{withdrawAmount}/Bank");
        }
    }
    
    private void ResetWithdraw()
    {
        withdrawAmount = 0;
    }
}


<div class="form-control">
    <form>
        <h3 class="align-content-center">Withdraw Money from Faction</h3>
        <label class="form-label" for="withdrawAmount">Amount to Withdraw:</label>
        <input class="form-text" type="number" id="withdrawAmount" @bind="withdrawAmount"/>
        <button class="btn btn-primary" @onclick="PlayerWithdrawFRomBank">Withdraw from Bank</button>
        <button class="btn btn-primary" @onclick="ResetWithdraw">Reset Withdraw Amount</button>
    </form>
</div>